<?xml version="1.0"?>

<odoo>

    <record id="estate_property_action" model="ir.actions.act_window">
        <field name="name">Vue des annonces</field>
        <field name="res_model">estate.property</field>
        <field name="view_mode">list,form,kanban</field>
        <field name="context">{'search_default_available': True}</field> <!-- permet de mettre le filtre 'available' défini plus loin par défaut-->
    </record>

    <!-- Les vues liste affichent les enregistrements sous forme 'tabulaire' (sous forme de ligne) 
    Leur root element est <tree> -->
    <record id="estate_property_list_view" model="ir.ui.view">
        <field name="name">estate.property.list.view</field>
        <field name="model">estate.property</field>
        <field name="arch" type="xml">
            <tree decoration-success="state in ('offer_received','offer_accepted')" decoration-bf="state=='offer_accepted'" decoration-muted="state=='sold'">
                <field name="state" invisible="1"/> <!-- Je dois charger le champ state même si je ne veux pas l'afficher car je fais des conditions dessus avec decoration- juste au dessus -->
                <field name="name"/>
                <field name="property_type_id"/>
                <field name="tags_ids" widget="many2many_tags" options="{'color_field': 'color'}"/>
                <field name="postcode"/>
                <field name="bedrooms"/>
                <field name="living_area"/>
                <field name="expected_price"/>
                <field name="selling_price"/>
                <field name="date_available_from" optional="hide"/>
            </tree>
        </field>
    </record>


    <!-- Les vues form sont utilisées pour créer et éditer un enregistrement. Leur root element est <form> -->
    <record id="estate_property_form_view" model="ir.ui.view">
        <field name="name">estate.property.form.view</field>
        <field name="model">estate.property</field>
        <field name="arch" type="xml">
            <form>
                <header>
                    <button name="action_sold" type="object" string="SOLD" invisible="state in ('sold','cancelled')"/>
                    <button name="action_cancelled" type="object" string="CANCELLED" invisible="state in ('sold','cancelled')"/>
                    <field name="state" widget="statusbar" statusbar_visible="new,offer_received,offer_accepted,sold"/>
                </header>
                <sheet>
                    <h1><field name="name"/></h1>
                    <field name="tags_ids" widget="many2many_tags" options="{'color_field': 'color'}"/>
                    <group>
                        <group>
                            <field name="property_type_id"/>
                            <field name="postcode"/>
                            <field name="date_available_from"/>
                        </group>
                        <group>
                            <field name="expected_price"/>
                            <field name="selling_price"/>
                            <field name="best_price"/>
                        </group>
                    </group>
                    <notebook>
                        <page string="Description">
                            <field name="description"/>
                            <group>
                                <field name="state"/>
                                <field name="bedrooms"/>
                                <field name="living_area"/>
                                <field name="facades"/>
                                <field name="garage"/>
                                <field name="garden"/>
                                <field name="garden_area" invisible="not garden"/>
                                <field name="garden_orientation" invisible="not garden"/>
                                <field name="active"/>
                                <field name="total_area"/>
                            </group>
                        </page>
                        <page string="Offers">
                            <field name="offers_ids" readonly="state in ('offer_accepted','sold','cancelled')"/>
                        </page>
                        <page string="Others Informations">
                            <group>
                                <field name="salesperson"/>
                                <field name="buyer"/>
                            </group>
                        </page>
                    </notebook>
                </sheet>
            </form>
        </field>
    </record>

    <!-- 
    - les <field> hors d'un <group> : seuls leurs contenus apparait, mais pas leur nom.
     -->


     <!-- Les vues search sont un peu différentes des vues list et form.
        Elles n'affichent pas de contenu. Elles sont utilisées pour filtrer les contenus d'autres vues.
        Leur root element est <search> -->
    <record id="estate_property_search_view" model="ir.ui.view">
        <field name="name">estate.property.search.view</field>
        <field name="model">estate.property</field>
        <field name="arch" type="xml">
            <search string="Recherche">
                <field name="name"/>
                <field name="postcode"/>
                <field name="expected_price"/>
                <field name="bedrooms"/>
                <field name="living_area" filter_domain="[('living_area','>=',self)]"/> <!-- le self dans un filter_domain correspond à la valeur saisie par l'utilisateur -->
                <field name="facades"/>
                <field name="property_type_id"/>
                <filter string="Inactives" name="inactives" domain="[('active', '=', False)]"/>
                <filter string="Availables" name="available" domain="['|',('state','=','new'),('state','=','offer_received')]"/>
                <filter string="Postcode" name="postcode" context="{'group_by':'postcode'}"/>
            </search>
        </field>
    </record>

    <!-- 
    Dans les filtres :
    - on utilise un domain pour filtrer sur des champs existant du modèle (la condition est statique ou basée sur des champs)
    - on utilise un context pour grouper des données et des comportements dynamiques (ou passer des paramètres à des méthodes ou définir des valeurs par défaut)

    Les 2 peuvent être combinés.
     -->


    <!-- Vue kanban pour notre modèle d'annonces -->
    <record id="estate_property_kanban_view" model="ir.ui.view">
        <field name="name">estate.property.kanban.view</field>
        <field name="model">estate.property</field>
        <field name="arch" type="xml">
            <kanban default_group_by="property_type_id" records_draggable="False"> <!-- On tri les enregistrements par type de propriété et on empêche le drag and drop des enregistrements -->
                <field name="state"/> <!-- On ne veut pas afficher ce champ state mais on est obligé de le charger quelque part pour pouvoir faire des conditions dessus en dessous. -->
                <templates>
                    <t t-name="kanban-box">
                        <div class="oe_kanban_global_click">
                            <div class="o_kanban_record_title text-center text-decoration-underline mb-2"> <!-- Utilisation de class CSS Odoo prédéfinies -->
                                <field name="name"/>
                            </div>
                            
                            <field name="tags_ids"/>

                            <!-- Apparemment les balises group ne permettent pas d'fficher le nom des champs dans une vue kanban ? -->
                            <div>
                                <strong>Expected Price : </strong>
                                <field name="expected_price"/> €
                            </div>

                            <div t-if="record.state.raw_value == 'offer_received'">
                                <strong>Best Price : </strong>
                                <field name="best_price"/> €
                            </div>

                            <div t-if="record.state.raw_value == 'offer_accepted'">
                                <strong>Selling Price : </strong>
                                <field name="selling_price"/> €
                            </div>

                        </div>
                    </t>
                </templates>
            </kanban>
        </field>
    </record>

</odoo>
